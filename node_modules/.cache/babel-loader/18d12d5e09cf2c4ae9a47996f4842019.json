{"ast":null,"code":"import { ACTIONS } from \"../../actionConstants\";\nimport API from \"../api\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { userActions } from \"../actions/user\";\n\nconst getUser = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {// history.push(\"/\");\n    } else {\n      const {\n        data\n      } = await API.get(\"/person/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }); // dispatch(\n      //   userActions.getUserData({\n      //     name: data.name,\n      //     email: data.email,\n      //     imageProfile: data.imageProfile,\n      //     signedCourses: data.courses,\n      //   })\n      // );\n      // history.push(\"/application\");\n\n      return data;\n    }\n  } catch (e) {\n    history.push(\"/\");\n  }\n};\n\nfunction* getUserDataRequest() {\n  const user = yield call(getUser);\n  yield put(userActions.getUserData(user));\n}\n\nfunction* watchRequestGetUser() {\n  yield takeLatest(ACTIONS.GET_USER_DATA_REQUEST, getUserDataRequest);\n}\n\nfunction* userSagas() {\n  yield all([watchRequestGetUser]);\n}\n\nexport { userSagas };","map":{"version":3,"sources":["/home/pcfmello/projetos/teste-entrevista-react/src/store/sagas/user.js"],"names":["ACTIONS","API","all","call","put","takeLatest","userActions","getUser","token","localStorage","getItem","data","get","headers","Authorization","e","history","push","getUserDataRequest","user","getUserData","watchRequestGetUser","GET_USER_DATA_REQUEST","userSagas"],"mappings":"AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AAEA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,MAAMC,OAAO,GAAG,YAAY;AAC1B,MAAI;AACF,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAI,CAACF,KAAL,EAAY,CACV;AACD,KAFD,MAEO;AACL,YAAM;AAAEG,QAAAA;AAAF,UAAW,MAAMV,GAAG,CAACW,GAAJ,CAAQ,YAAR,EAAsB;AAC3CC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASN,KAAM;AADxB;AADkC,OAAtB,CAAvB,CADK,CAML;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,aAAOG,IAAP;AACD;AACF,GAtBD,CAsBE,OAAOI,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACD;AACF,CA1BD;;AA4BA,UAAUC,kBAAV,GAA+B;AAC7B,QAAMC,IAAI,GAAG,MAAMhB,IAAI,CAACI,OAAD,CAAvB;AACA,QAAMH,GAAG,CAACE,WAAW,CAACc,WAAZ,CAAwBD,IAAxB,CAAD,CAAT;AACD;;AAED,UAAUE,mBAAV,GAAgC;AAC9B,QAAMhB,UAAU,CAACL,OAAO,CAACsB,qBAAT,EAAgCJ,kBAAhC,CAAhB;AACD;;AAED,UAAUK,SAAV,GAAsB;AACpB,QAAMrB,GAAG,CAAC,CAACmB,mBAAD,CAAD,CAAT;AACD;;AAED,SAASE,SAAT","sourcesContent":["import { ACTIONS } from \"../../actionConstants\";\nimport API from \"../api\";\n\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\n\nimport { userActions } from \"../actions/user\";\n\nconst getUser = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      // history.push(\"/\");\n    } else {\n      const { data } = await API.get(\"/person/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      // dispatch(\n      //   userActions.getUserData({\n      //     name: data.name,\n      //     email: data.email,\n      //     imageProfile: data.imageProfile,\n      //     signedCourses: data.courses,\n      //   })\n      // );\n\n      // history.push(\"/application\");\n      return data;\n    }\n  } catch (e) {\n    history.push(\"/\");\n  }\n};\n\nfunction* getUserDataRequest() {\n  const user = yield call(getUser);\n  yield put(userActions.getUserData(user));\n}\n\nfunction* watchRequestGetUser() {\n  yield takeLatest(ACTIONS.GET_USER_DATA_REQUEST, getUserDataRequest);\n}\n\nfunction* userSagas() {\n  yield all([watchRequestGetUser]);\n}\n\nexport { userSagas };\n"]},"metadata":{},"sourceType":"module"}