{"ast":null,"code":"import { createStore, combineReducers } from \"redux\";\nimport { ACTIONS } from \"../actionConstants\";\nconst INITIAL_STATE = {\n  isLoading: false,\n  user: {\n    name: \"\",\n    email: \"\",\n    imageProfile: \"\",\n    signedCourses: []\n  }\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  const {\n    payload,\n    type\n  } = action;\n\n  switch (type) {\n    case ACTIONS.GET_USER_DATA:\n      {\n        return { ...state,\n          user: {\n            name: payload.name,\n            email: payload.email,\n            imageProfile: payload.imageProfile,\n            signedCourses: payload.signedCourses\n          }\n        };\n      }\n\n    case ACTIONS.SET_LOADING_ON:\n      {\n        return { ...state,\n          isLoading: true\n        };\n      }\n\n    case ACTIONS.SET_LOADING_OFF:\n      {\n        return { ...state,\n          isLoading: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst actions = {\n  getUserData: applicationData => ({\n    type: ACTIONS.GET_USER_DATA,\n    payload: applicationData\n  }),\n  setLoadingOn: () => ({\n    type: ACTIONS.SET_LOADING_ON\n  }),\n  setLoadingOff: () => ({\n    type: ACTIONS.SET_LOADING_OFF\n  })\n};\nconst reducers = combineReducers({\n  authReducer\n});\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport { store, actions };","map":{"version":3,"sources":["/home/pcfmello/projetos/teste-entrevista-react/src/redux/index.js"],"names":["createStore","combineReducers","ACTIONS","INITIAL_STATE","isLoading","user","name","email","imageProfile","signedCourses","authReducer","state","action","payload","type","GET_USER_DATA","SET_LOADING_ON","SET_LOADING_OFF","actions","getUserData","applicationData","setLoadingOn","setLoadingOff","reducers","store","window","__REDUX_DEVTOOLS_EXTENSION__"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,KADS;AAEpBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,EADF;AAEJC,IAAAA,KAAK,EAAE,EAFH;AAGJC,IAAAA,YAAY,EAAE,EAHV;AAIJC,IAAAA,aAAa,EAAE;AAJX;AAFc,CAAtB;;AAUA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGR,aAAT,EAAwBS,MAAxB,KAAmC;AACrD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,MAA1B;;AACA,UAAQE,IAAR;AACE,SAAKZ,OAAO,CAACa,aAAb;AAA4B;AAC1B,eAAO,EACL,GAAGJ,KADE;AAELN,UAAAA,IAAI,EAAE;AACJC,YAAAA,IAAI,EAAEO,OAAO,CAACP,IADV;AAEJC,YAAAA,KAAK,EAAEM,OAAO,CAACN,KAFX;AAGJC,YAAAA,YAAY,EAAEK,OAAO,CAACL,YAHlB;AAIJC,YAAAA,aAAa,EAAEI,OAAO,CAACJ;AAJnB;AAFD,SAAP;AASD;;AACD,SAAKP,OAAO,CAACc,cAAb;AAA6B;AAC3B,eAAO,EACL,GAAGL,KADE;AAELP,UAAAA,SAAS,EAAE;AAFN,SAAP;AAID;;AACD,SAAKF,OAAO,CAACe,eAAb;AAA8B;AAC5B,eAAO,EACL,GAAGN,KADE;AAELP,UAAAA,SAAS,EAAE;AAFN,SAAP;AAID;;AACD;AACE,aAAOO,KAAP;AAzBJ;AA2BD,CA7BD;;AA+BA,MAAMO,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAGC,eAAD,KAAsB;AACjCN,IAAAA,IAAI,EAAEZ,OAAO,CAACa,aADmB;AAEjCF,IAAAA,OAAO,EAAEO;AAFwB,GAAtB,CADC;AAKdC,EAAAA,YAAY,EAAE,OAAO;AACnBP,IAAAA,IAAI,EAAEZ,OAAO,CAACc;AADK,GAAP,CALA;AAQdM,EAAAA,aAAa,EAAE,OAAO;AACpBR,IAAAA,IAAI,EAAEZ,OAAO,CAACe;AADM,GAAP;AARD,CAAhB;AAaA,MAAMM,QAAQ,GAAGtB,eAAe,CAAC;AAC/BS,EAAAA;AAD+B,CAAD,CAAhC;AAIA,MAAMc,KAAK,GAAGxB,WAAW,CACvBuB,QADuB,EAEvBE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFhB,CAAzB;AAKA,SAASF,KAAT,EAAgBN,OAAhB","sourcesContent":["import { createStore, combineReducers } from \"redux\";\nimport { ACTIONS } from \"../actionConstants\";\n\nconst INITIAL_STATE = {\n  isLoading: false,\n  user: {\n    name: \"\",\n    email: \"\",\n    imageProfile: \"\",\n    signedCourses: [],\n  },\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  const { payload, type } = action;\n  switch (type) {\n    case ACTIONS.GET_USER_DATA: {\n      return {\n        ...state,\n        user: {\n          name: payload.name,\n          email: payload.email,\n          imageProfile: payload.imageProfile,\n          signedCourses: payload.signedCourses,\n        },\n      };\n    }\n    case ACTIONS.SET_LOADING_ON: {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    }\n    case ACTIONS.SET_LOADING_OFF: {\n      return {\n        ...state,\n        isLoading: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst actions = {\n  getUserData: (applicationData) => ({\n    type: ACTIONS.GET_USER_DATA,\n    payload: applicationData,\n  }),\n  setLoadingOn: () => ({\n    type: ACTIONS.SET_LOADING_ON,\n  }),\n  setLoadingOff: () => ({\n    type: ACTIONS.SET_LOADING_OFF,\n  }),\n};\n\nconst reducers = combineReducers({\n  authReducer,\n});\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport { store, actions };\n"]},"metadata":{},"sourceType":"module"}