{"ast":null,"code":"import { ACTIONS } from \"../../actionConstants\";\nimport { useHistory } from \"react-router-dom\";\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { userActions } from \"../actions/user\";\nconst history = useHistory();\n\nconst getUser = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      history.push(\"/\");\n    } else {\n      const {\n        data\n      } = await API.get(\"/person/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }); // dispatch(\n      //   userActions.getUserData({\n      //     name: data.name,\n      //     email: data.email,\n      //     imageProfile: data.imageProfile,\n      //     signedCourses: data.courses,\n      //   })\n      // );\n      // history.push(\"/application\");\n\n      return data;\n    }\n  } catch (e) {\n    history.push(\"/\");\n  }\n};\n\nfunction* getUserDataRequest() {\n  const user = yield call(getUser);\n  yield put(userActions.getUserData(user));\n}\n\nfunction* watchRequestGetUser() {\n  yield takeLatest(ACTIONS.GET_USER_DATA_REQUEST, getUserDataRequest);\n}\n\nfunction* userSagas() {\n  yield all([watchRequestGetUser]);\n}\n\nexport { userSagas };","map":{"version":3,"sources":["/home/pcfmello/projetos/teste-entrevista-react/src/store/sagas/user.js"],"names":["ACTIONS","useHistory","all","call","put","takeLatest","userActions","history","getUser","token","localStorage","getItem","push","data","API","get","headers","Authorization","e","getUserDataRequest","user","getUserData","watchRequestGetUser","GET_USER_DATA_REQUEST","userSagas"],"mappings":"AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AAEA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,MAAMC,OAAO,GAAGN,UAAU,EAA1B;;AAEA,MAAMO,OAAO,GAAG,YAAY;AAC1B,MAAI;AACF,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAI,CAACF,KAAL,EAAY;AACVF,MAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACD,KAFD,MAEO;AACL,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMC,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsB;AAC3CC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASR,KAAM;AADxB;AADkC,OAAtB,CAAvB,CADK,CAML;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,aAAOI,IAAP;AACD;AACF,GAtBD,CAsBE,OAAOK,CAAP,EAAU;AACVX,IAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACD;AACF,CA1BD;;AA4BA,UAAUO,kBAAV,GAA+B;AAC7B,QAAMC,IAAI,GAAG,MAAMjB,IAAI,CAACK,OAAD,CAAvB;AACA,QAAMJ,GAAG,CAACE,WAAW,CAACe,WAAZ,CAAwBD,IAAxB,CAAD,CAAT;AACD;;AAED,UAAUE,mBAAV,GAAgC;AAC9B,QAAMjB,UAAU,CAACL,OAAO,CAACuB,qBAAT,EAAgCJ,kBAAhC,CAAhB;AACD;;AAED,UAAUK,SAAV,GAAsB;AACpB,QAAMtB,GAAG,CAAC,CAACoB,mBAAD,CAAD,CAAT;AACD;;AAED,SAASE,SAAT","sourcesContent":["import { ACTIONS } from \"../../actionConstants\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { all, call, put, takeLatest } from \"redux-saga/effects\";\n\nimport { userActions } from \"../actions/user\";\n\nconst history = useHistory();\n\nconst getUser = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      history.push(\"/\");\n    } else {\n      const { data } = await API.get(\"/person/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      // dispatch(\n      //   userActions.getUserData({\n      //     name: data.name,\n      //     email: data.email,\n      //     imageProfile: data.imageProfile,\n      //     signedCourses: data.courses,\n      //   })\n      // );\n\n      // history.push(\"/application\");\n      return data;\n    }\n  } catch (e) {\n    history.push(\"/\");\n  }\n};\n\nfunction* getUserDataRequest() {\n  const user = yield call(getUser);\n  yield put(userActions.getUserData(user));\n}\n\nfunction* watchRequestGetUser() {\n  yield takeLatest(ACTIONS.GET_USER_DATA_REQUEST, getUserDataRequest);\n}\n\nfunction* userSagas() {\n  yield all([watchRequestGetUser]);\n}\n\nexport { userSagas };\n"]},"metadata":{},"sourceType":"module"}