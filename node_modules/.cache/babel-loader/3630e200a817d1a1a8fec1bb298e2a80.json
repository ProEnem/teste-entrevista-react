{"ast":null,"code":"import { ACTIONS } from \"../../actionConstants\";\nimport { all } from \"redux-saga\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { userActions } from \"../actions/user\";\n\nconst getUser = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      history.push(\"/\");\n    } else {\n      const responseUser = await API.get(\"/person/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      dispatch(userActions.getUserData({\n        name: responseUser.data.name,\n        email: responseUser.data.email,\n        imageProfile: responseUser.data.imageProfile,\n        signedCourses: responseUser.data.courses\n      }));\n      history.push(\"/application\");\n    }\n  } catch (e) {\n    // toast.error(\n    //   <ToastMessage title=\"Erro\" message={e.response.data.detail} />\n    // );\n    history.push(\"/\");\n  }\n};\n\nfunction* getUserRequested() {\n  const user = yield call(getUser);\n}","map":{"version":3,"sources":["/home/pcfmello/projetos/teste-entrevista-react/src/store/sagas/user.js"],"names":["ACTIONS","all","call","put","takeLatest","userActions","getUser","token","localStorage","getItem","history","push","responseUser","API","get","headers","Authorization","dispatch","getUserData","name","data","email","imageProfile","signedCourses","courses","e","getUserRequested","user"],"mappings":"AAAA,SAASA,OAAT,QAAwB,uBAAxB;AAEA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AAEA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,MAAMC,OAAO,GAAG,YAAY;AAC1B,MAAI;AACF,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAI,CAACF,KAAL,EAAY;AACVG,MAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACD,KAFD,MAEO;AACL,YAAMC,YAAY,GAAG,MAAMC,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsB;AAC/CC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAAST,KAAM;AADxB;AADsC,OAAtB,CAA3B;AAKAU,MAAAA,QAAQ,CACNZ,WAAW,CAACa,WAAZ,CAAwB;AACtBC,QAAAA,IAAI,EAAEP,YAAY,CAACQ,IAAb,CAAkBD,IADF;AAEtBE,QAAAA,KAAK,EAAET,YAAY,CAACQ,IAAb,CAAkBC,KAFH;AAGtBC,QAAAA,YAAY,EAAEV,YAAY,CAACQ,IAAb,CAAkBE,YAHV;AAItBC,QAAAA,aAAa,EAAEX,YAAY,CAACQ,IAAb,CAAkBI;AAJX,OAAxB,CADM,CAAR;AASAd,MAAAA,OAAO,CAACC,IAAR,CAAa,cAAb;AACD;AACF,GArBD,CAqBE,OAAOc,CAAP,EAAU;AACV;AACA;AACA;AACAf,IAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACD;AACF,CA5BD;;AA8BA,UAAUe,gBAAV,GAA6B;AAC3B,QAAMC,IAAI,GAAG,MAAMzB,IAAI,CAACI,OAAD,CAAvB;AACD","sourcesContent":["import { ACTIONS } from \"../../actionConstants\";\n\nimport { all } from \"redux-saga\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\n\nimport { userActions } from \"../actions/user\";\n\nconst getUser = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      history.push(\"/\");\n    } else {\n      const responseUser = await API.get(\"/person/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      dispatch(\n        userActions.getUserData({\n          name: responseUser.data.name,\n          email: responseUser.data.email,\n          imageProfile: responseUser.data.imageProfile,\n          signedCourses: responseUser.data.courses,\n        })\n      );\n\n      history.push(\"/application\");\n    }\n  } catch (e) {\n    // toast.error(\n    //   <ToastMessage title=\"Erro\" message={e.response.data.detail} />\n    // );\n    history.push(\"/\");\n  }\n};\n\nfunction* getUserRequested() {\n  const user = yield call(getUser);\n}\n"]},"metadata":{},"sourceType":"module"}