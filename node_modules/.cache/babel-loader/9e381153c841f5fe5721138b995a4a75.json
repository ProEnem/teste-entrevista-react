{"ast":null,"code":"import { createStore, combineReducers } from \"redux\";\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  signedCourses: []\n}; // REDUCER\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  const {\n    payload,\n    type\n  } = action;\n\n  switch (type) {\n    case \"GET_USER_DATA\":\n      {\n        return { ...state,\n          name: payload.name,\n          email: payload.email\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst reducers = combineReducers({\n  authReducer\n});\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()); // ACTIONS\n\nconst actions = {\n  getUserData: applicationData => ({\n    type: \"GET_USER_DATA\",\n    payload: applicationData\n  })\n};\nexport { store, actions };","map":{"version":3,"sources":["/home/pcfmello/projetos/teste-entrevista-react/src/redux/index.js"],"names":["createStore","combineReducers","INITIAL_STATE","name","email","signedCourses","authReducer","state","action","payload","type","reducers","store","window","__REDUX_DEVTOOLS_EXTENSION__","actions","getUserData","applicationData"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,aAAa,EAAE;AAHK,CAAtB,C,CAMA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AACrD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,MAA1B;;AACA,UAAQE,IAAR;AACE,SAAK,eAAL;AAAsB;AACpB,eAAO,EAAE,GAAGH,KAAL;AAAYJ,UAAAA,IAAI,EAAEM,OAAO,CAACN,IAA1B;AAAgCC,UAAAA,KAAK,EAAEK,OAAO,CAACL;AAA/C,SAAP;AACD;;AACD;AACE,aAAOG,KAAP;AALJ;AAOD,CATD;;AAWA,MAAMI,QAAQ,GAAGV,eAAe,CAAC;AAC/BK,EAAAA;AAD+B,CAAD,CAAhC;AAIA,MAAMM,KAAK,GAAGZ,WAAW,CACvBW,QADuB,EAEvBE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFhB,CAAzB,C,CAKA;;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAGC,eAAD,KAAsB;AACjCP,IAAAA,IAAI,EAAE,eAD2B;AAEjCD,IAAAA,OAAO,EAAEQ;AAFwB,GAAtB;AADC,CAAhB;AAOA,SAASL,KAAT,EAAgBG,OAAhB","sourcesContent":["import { createStore, combineReducers } from \"redux\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  signedCourses: [],\n};\n\n// REDUCER\nconst authReducer = (state = INITIAL_STATE, action) => {\n  const { payload, type } = action;\n  switch (type) {\n    case \"GET_USER_DATA\": {\n      return { ...state, name: payload.name, email: payload.email };\n    }\n    default:\n      return state;\n  }\n};\n\nconst reducers = combineReducers({\n  authReducer,\n});\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// ACTIONS\nconst actions = {\n  getUserData: (applicationData) => ({\n    type: \"GET_USER_DATA\",\n    payload: applicationData,\n  }),\n};\n\nexport { store, actions };\n"]},"metadata":{},"sourceType":"module"}