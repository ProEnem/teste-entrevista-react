{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pcfmello/projetos/teste-entrevista-react/src/pages/Login/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport { Card, Button, CardTitle, Row, Col, Form, FormGroup, Input } from \"reactstrap\";\nimport API from \"../../api\";\nimport ToastMessage from \"../../components/ToastMessage\";\nimport * as S from \"./styles\";\nimport { userActions } from \"../store/actions/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nconst schema = yup.object().shape({\n  email: yup.string().email(\"Email pattern is incorrect\").required(\"Email is required\"),\n  password: yup.string().required(\"Password is required\")\n});\n\nconst Login = () => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const history = useHistory();\n  const userState = useSelector(({\n    userReducer\n  }) => userReducer);\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = async ({\n    email,\n    password\n  }) => {\n    try {\n      dispatch(userActions.setLoadingOn());\n      const responseToken = await API.post(\"/token\", {\n        email,\n        password\n      });\n      localStorage.setItem(\"token\", responseToken.data.token);\n      dispatch(userActions.setLoadingOff());\n      history.push(\"/application\");\n    } catch (e) {\n      toast.error( /*#__PURE__*/_jsxDEV(ToastMessage, {\n        title: \"Erro\",\n        message: e.response.data.detail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this));\n      dispatch(userActions.setLoadingOff());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          size: 12,\n          offset: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          body: true,\n          children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n            tag: \"h5\",\n            className: \"text-center\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                name: \"email\",\n                placeholder: \"Seu e-mail\",\n                innerRef: register,\n                invalid: !!errors.email,\n                disabled: userState.isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(S.ErrorMessage, {\n                children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                name: \"password\",\n                placeholder: \"Sua senha\",\n                innerRef: register,\n                invalid: !!errors.password,\n                disabled: userState.isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(S.ErrorMessage, {\n                children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              block: true,\n              disabled: userState.isLoading,\n              children: userState.isLoading ? \"Carregando...\" : \"Entrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"CFdoPLbm5bBna5hGV0MTnG+a1a4=\", false, function () {\n  return [useHistory, useSelector, useDispatch, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/pcfmello/projetos/teste-entrevista-react/src/pages/Login/index.js"],"names":["React","useHistory","useForm","yupResolver","yup","toast","ToastContainer","Card","Button","CardTitle","Row","Col","Form","FormGroup","Input","API","ToastMessage","S","userActions","useDispatch","useSelector","schema","object","shape","email","string","required","password","Login","history","userState","userReducer","dispatch","register","handleSubmit","errors","resolver","onSubmit","setLoadingOn","responseToken","post","localStorage","setItem","data","token","setLoadingOff","push","e","error","response","detail","size","offset","isLoading","message"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport {\n  Card,\n  Button,\n  CardTitle,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\nimport API from \"../../api\";\nimport ToastMessage from \"../../components/ToastMessage\";\nimport * as S from \"./styles\";\n\nimport { userActions } from \"../store/actions/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"Email pattern is incorrect\")\n    .required(\"Email is required\"),\n  password: yup.string().required(\"Password is required\"),\n});\n\nconst Login = () => {\n  const history = useHistory();\n  const userState = useSelector(({ userReducer }) => userReducer);\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = async ({ email, password }) => {\n    try {\n      dispatch(userActions.setLoadingOn());\n      const responseToken = await API.post(\"/token\", { email, password });\n\n      localStorage.setItem(\"token\", responseToken.data.token);\n\n      dispatch(userActions.setLoadingOff());\n      history.push(\"/application\");\n    } catch (e) {\n      toast.error(\n        <ToastMessage title=\"Erro\" message={e.response.data.detail} />\n      );\n      dispatch(userActions.setLoadingOff());\n    }\n  };\n\n  return (\n    <S.Container>\n      <ToastContainer />\n      <Row>\n        <Col xs={{ size: 12, offset: 0 }}>\n          <Card body>\n            <CardTitle tag=\"h5\" className=\"text-center\">\n              Login\n            </CardTitle>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Input\n                  name=\"email\"\n                  placeholder=\"Seu e-mail\"\n                  innerRef={register}\n                  invalid={!!errors.email}\n                  disabled={userState.isLoading}\n                />\n                <S.ErrorMessage>{errors.email?.message}</S.ErrorMessage>\n              </FormGroup>\n              <FormGroup>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Sua senha\"\n                  innerRef={register}\n                  invalid={!!errors.password}\n                  disabled={userState.isLoading}\n                />\n                <S.ErrorMessage>{errors.password?.message}</S.ErrorMessage>\n              </FormGroup>\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                block\n                disabled={userState.isLoading}\n              >\n                {userState.isLoading ? \"Carregando...\" : \"Entrar\"}\n              </Button>\n            </Form>\n          </Card>\n        </Col>\n      </Row>\n    </S.Container>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}